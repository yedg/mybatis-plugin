package com.tqlab.demo.dal.dao;

import com.tqlab.demo.dal.dataobject.Star;
import com.tqlab.demo.dal.dataobject.StarKey;
import com.tqlab.demo.dal.dataobject.StarMovies2;
import com.tqlab.demo.dal.dataobject.StarMovies;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Lang;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.scripting.xmltags.XMLLanguageDriver;
import org.apache.ibatis.type.JdbcType;

public interface StarMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     *
     * @mbggenerated
     */
    @Delete({
        "delete from STAR",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(StarKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     *
     * @mbggenerated
     */
    @Insert({
        "insert into STAR (ID, FIRSTNAME, ",
        "LASTNAME)",
        "values (#{id,jdbcType=INTEGER}, #{firstname,jdbcType=VARCHAR}, ",
        "#{lastname,jdbcType=VARCHAR})"
    })
    int insert(Star record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     *
     * @mbggenerated
     */
    @InsertProvider(type=StarSqlProvider.class, method="insertSelective")
    int insertSelective(Star record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ID, FIRSTNAME, LASTNAME",
        "from STAR",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="FIRSTNAME", property="firstname", jdbcType=JdbcType.VARCHAR),
        @Result(column="LASTNAME", property="lastname", jdbcType=JdbcType.VARCHAR)
    })
    Star selectByPrimaryKey(StarKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     *
     * @mbggenerated
     */
    @UpdateProvider(type=StarSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Star record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     *
     * @mbggenerated
     */
    @Update({
        "update STAR",
        "set FIRSTNAME = #{firstname,jdbcType=VARCHAR},",
          "LASTNAME = #{lastname,jdbcType=VARCHAR}",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Star record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     *
    @mbggenerated
     */
    @Delete({
        "delete from star where id=#{id,jdbcType=INTEGER};"    
    })
    int deleteById(@Param("id") Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     *
    @mbggenerated
     */
    @Select({
        "select count(*) from star;"
    })
    int count();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     *
    @mbggenerated
     */
    @Select({
        "select sum(id) from star;"
    })
    Integer sum();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     *
    @mbggenerated
     */
    @Select({
        "select * from star;"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="FIRSTNAME", property="firstname", jdbcType=JdbcType.VARCHAR),
        @Result(column="LASTNAME", property="lastname", jdbcType=JdbcType.VARCHAR)
    })
    List<Star> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     *
    @mbggenerated
     */
    @Select({
        "select * from star where id=#{id,jdbcType=INTEGER};"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="FIRSTNAME", property="firstname", jdbcType=JdbcType.VARCHAR),
        @Result(column="LASTNAME", property="lastname", jdbcType=JdbcType.VARCHAR)
    })
    Star selectById(@Param("id") Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     * demo
     *
    @mbggenerated
     */
    @Select({
        "select * from star limit #{size,jdbcType=INTEGER} OFFSET #{offset,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="FIRSTNAME", property="firstname", jdbcType=JdbcType.VARCHAR),
        @Result(column="LASTNAME", property="lastname", jdbcType=JdbcType.VARCHAR)
    })
    List<Star> selectWithPagination(@Param("size") Integer size, @Param("offset") Integer offset);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     *
    @mbggenerated
     */
    @Select({
        "select a.*, b.* from star a, movies b where a.id = b.starid"
    })
    @Results({
        @Result(column="id", property="id"),
        @Result(column="firstname", property="firstname"),
        @Result(column="lastname", property="lastname"),
        @Result(column="movieid", property="movieid"),
        @Result(column="title", property="title")
    })
    List<StarMovies> selectComplex1();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     *
    @mbggenerated
     */
    @Select({
        "select a.id as star_id, a.firstname as name, a.lastname,  b.movieid, b.title from star a, movies b  where a.id = b.starid"
    })
    @Results({
        @Result(column="star_id", property="id"),
        @Result(column="name", property="firstname"),
        @Result(column="lastname", property="lastname"),
        @Result(column="movieid", property="movieid"),
        @Result(column="title", property="title")
    })
    List<StarMovies2> selectComplex2();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     *
    @mbggenerated
     */
    @Lang(XMLLanguageDriver.class)
    @Select({
        "<script>",
        "<bind name=\"pattern\" value=\"'%' + firstname + '%'\" />  select * from star where firstname like #{pattern} and id = #{id};"
        ,"</script>"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="FIRSTNAME", property="firstname", jdbcType=JdbcType.VARCHAR),
        @Result(column="LASTNAME", property="lastname", jdbcType=JdbcType.VARCHAR)
    })
    List<Star> searchByfirstname(Object obj);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     *
    @mbggenerated
     */
    @Lang(XMLLanguageDriver.class)
    @Update({
        "<script>",
        "update star  <set>  <if test=\"firstname!= null\">firstname=#{firstname},</if>  <if test=\"lastname!= null\">lastname=#{lastname},</if>  </set> where id=#{id}"    
        ,"</script>"
    })
    int update(@Param("firstname") String firstname, @Param("lastname") String lastname, @Param("id") Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table STAR
     *
    @mbggenerated
     */
    @Lang(XMLLanguageDriver.class)
    @Update({
        "<script>",
        "update star  <set>  <if test=\"firstname!= null\">firstname=#{firstname},</if>  <if test=\"lastname!= null\">lastname=#{lastname},</if>  </set> where id=#{id}"    
        ,"</script>"
    })
    int update2(Object obj);
}